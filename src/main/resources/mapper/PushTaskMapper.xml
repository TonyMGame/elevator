<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soundai.elevator.cms.mapper.PushTaskMapper">

    <resultMap id="BaseResultMap1" type="com.soundai.elevator.cms.entity.PushTask">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="bgtime" property="bgTime"/>
        <result column="edtime" property="edTime"/>
        <result column="location" property="location"/>
        <result column="elevator" property="elevator"/>
        <result column="elevatorId" property="elevatorId"/>
        <result column="material" property="material"/>
        <result column="updateUserName" property="updateUserName"/>
        <result column="deviceId" property="deviceId"/>
        <result column="task_id" property="taskId"/>
        <result column="status" property="status"/>
        <result column="duration" property="duration"/>
    </resultMap>

    <resultMap id="BaseResultMap2" type="com.soundai.elevator.cms.entity.PushDefaultTask">
        <result column="id" property="id"/>
        <result column="location" property="location"/>
        <result column="elevatorName" property="elevatorName"/>
        <result column="material" property="material"/>
        <result column="updateUserName" property="updateUserName"/>
        <result column="device_id" property="deviceId"/>
        <result column="status" property="status"/>
        <result column="duration" property="duration"/>
    </resultMap>

    <select id="getPushTask" resultMap="BaseResultMap1" parameterType="java.lang.Long">
        SELECT a.*,b.name as updateUserName,
        GROUP_CONCAT(DISTINCT(c.location)) as location,
        GROUP_CONCAT(DISTINCT(device_id)) as deviceId,
        GROUP_CONCAT(DISTINCT(c.elevator)) as elevator
        FROM push_task a
        LEFT JOIN `user` b ON a.update_user = b.id
        LEFT JOIN equipment c ON a.device_id = c.equipment_id
        where 1=1
        and task_id = #{taskId}
        GROUP BY task_id
        ORDER BY task_id Desc
    </select>

    <select id="getPushTaskList" resultMap="BaseResultMap1" parameterType="com.soundai.elevator.cms.vo.PushTaskPageVo">
        SELECT a.*,b.name as updateUserName,
        GROUP_CONCAT(DISTINCT(c.location)) as location,
        GROUP_CONCAT(DISTINCT(device_id)) as deviceId,
        GROUP_CONCAT(DISTINCT(c.elevator)) as elevator,
        GROUP_CONCAT(DISTINCT(c.id)) as elevatorId
        FROM push_task a
        LEFT JOIN `user` b ON a.update_user = b.id
        LEFT JOIN equipment c ON a.device_id = c.equipment_id
        where 1=1
        <if test="name !=null and name !=''">
            and a.name like CONCAT(CONCAT('%', #{name}), '%')
        </if>
        <if test="userId !=null and userId !=''">
            and a.update_user =#{userId}
        </if>
        <if test="deviceId !=null and deviceId !=''">
            and a.device_id = #{deviceId}
        </if>
        <if test="bgTime !=null ">
            and UNIX_TIMESTAMP(a.bgtime)*1000 &gt;= #{bgTime,jdbcType=TIMESTAMP}
        </if>
        <if test="edTime !=null ">
            and UNIX_TIMESTAMP(a.edtime)*1000 &lt;= #{edTime,jdbcType=TIMESTAMP}
        </if>
        <if test="location !=null and location !=''">
            and location = #{location}
        </if>
        <if test="elevator !=null and elevator !=''">
            and elevator = #{elevator}
        </if>
        <if test="status =1 ">
            and status &lt;= 1
        </if>
        <if test="material !=null and material !=''">
            and material like CONCAT(CONCAT('%', #{material}), '%')
        </if>
        GROUP BY task_id
        ORDER BY task_id DESC
    </select>

    <select id="getPushTaskListH" resultMap="BaseResultMap1" parameterType="com.soundai.elevator.cms.vo.PushTaskPageVo">
        SELECT a.*,b.name as updateUserName,
        GROUP_CONCAT(DISTINCT(c.location)) as location,
        GROUP_CONCAT(DISTINCT(device_id)) as deviceId,
        GROUP_CONCAT(DISTINCT(c.elevator)) as elevator,
        GROUP_CONCAT(DISTINCT(c.id)) as elevatorId
        FROM push_task a
        LEFT JOIN `user` b ON a.update_user = b.id
        LEFT JOIN equipment c ON a.device_id = c.equipment_id
        where 1=1
        <if test="name !=null and name !=''">
            and a.name like CONCAT(CONCAT('%', #{name}), '%')
        </if>
        <if test="userId !=null and userId !=''">
            and a.update_user =#{userId}
        </if>
        <if test="deviceId !=null and deviceId !=''">
            and a.device_id = #{deviceId}
        </if>
        <if test="bgTime !=null ">
            and UNIX_TIMESTAMP(a.bgtime)*1000 &gt;= #{bgTime,jdbcType=TIMESTAMP}
        </if>
        <if test="edTime !=null ">
            and UNIX_TIMESTAMP(a.edtime)*1000 &lt;= #{edTime,jdbcType=TIMESTAMP}
        </if>
        <if test="location !=null and location !=''">
            and location = #{location}
        </if>
        <if test="elevator !=null and elevator !=''">
            and elevator = #{elevator}
        </if>
        <if test="status =2 ">
            and status &gt;=2
        </if>
        <if test="material !=null and material !=''">
            and material like CONCAT(CONCAT('%', #{material}), '%')
        </if>
        GROUP BY task_id
        ORDER BY task_id DESC
    </select>


    <insert id="add" parameterType="com.soundai.elevator.cms.entity.PushTask">
        INSERT INTO push_task
        (name,bgtime,edtime,material,device_id,task_id,update_user,status,duration)
        <trim prefix="values" suffix="" suffixOverrides=",">
            <foreach collection="list" item="item" index="index" separator=",">
                (#{item.name},
                #{item.bgTime},
                #{item.edTime},
                #{item.material},
                #{item.deviceId},
                #{item.taskId},
                #{item.updateUserName},
                #{item.status},
                #{item.duration}
                )
            </foreach>
        </trim>
    </insert>

    <select id="repeatTime" resultType="java.lang.Integer" parameterType="com.soundai.elevator.cms.entity.RepeatTime">
        SELECT COUNT(1) FROM push_task
        WHERE 1=1 AND
        `status` != 2
        and
        device_id in
        <foreach collection="list" item="id" index="index" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and
        ((UNIX_TIMESTAMP(bgtime)*1000  BETWEEN #{bgTime}  AND #{edTime})
        or
        (UNIX_TIMESTAMP(edTime)*1000  BETWEEN #{bgTime}  AND #{edTime}))
    </select>


    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update push_task
            <set>
                <if test="item.name !=null and item.name !=''">
                    name = #{item.name,jdbcType=VARCHAR},
                </if>
                <if test="item.deviceId !=null and item.deviceId !=''">
                    device_id = #{item.deviceId,jdbcType=VARCHAR},
                </if>
                <if test="item.bgTime !=null ">
                    bgtime = #{item.bgTime,jdbcType=TIMESTAMP},
                </if>
                <if test="item.edTime !=null ">
                    edtime = #{item.edTime,jdbcType=TIMESTAMP},
                </if>
                <if test="item.material !=null and item.material !=''">
                    material = #{item.material,jdbcType=VARCHAR},
                </if>
                <if test="item.updateUserName !=null and item.updateUserName !=''">
                    update_user = #{item.updateUserName,jdbcType=INTEGER},
                </if>
                <if test="item.status !=null and item.status !=''">
                    status = #{item.status,jdbcType=INTEGER},
                </if>
                <if test="item.duration !=null and item.duration !=''">
                    status = #{item.duration,jdbcType=INTEGER},
                </if>
            </set>
            where id = #{item.id,jdbcType=INTEGER}
        </foreach>
    </update>

    <update id="updateTaskTime" parameterType="com.soundai.elevator.cms.vo.DeletePushTask">
        update  push_task set edtime = NOW()
        where task_id = #{taskId,jdbcType=INTEGER}
    </update>

    <select id="waitePushTask" resultType="java.util.HashMap">
        SELECT * FROM  push_task
        WHERE bgtime  &lt;= NOW()
        AND edtime &gt; NOW()
        AND status = 0
    </select>

    <select id="completePushTask" resultType="java.util.HashMap">
        SELECT * FROM  push_task
        WHERE edtime &lt;= NOW()
        AND status = 1
    </select>


    <select id="getPushTaskDefaultList" resultMap="BaseResultMap2"
            parameterType="com.soundai.elevator.cms.vo.PushTaskPageVo">
        SELECT a.*,b.name as updateUserName,c.elevator as elevatorName
        FROM push_task_default a
        LEFT JOIN `user` b ON a.update_user = b.id
        LEFT JOIN equipment c ON a.elevator = c.id
        where 1=1
        <if test="location !=null and location !=''">
            and a.location = #{location}
        </if>
        <if test="userId !=null and userId !=''">
            and a.update_user =#{userId}
        </if>
        <if test="elevator !=null and elevator !=''">
            and a.elevator = #{elevator}
        </if>
        <if test="deviceId !=null and deviceId !=''">
            and a.device_id like CONCAT(CONCAT('%', #{deviceId}), '%')
        </if>
        <if test="material !=null and material !=''">
            and a.material like CONCAT(CONCAT('%', #{material}), '%')
        </if>
        <if test="status !=null and status !=''">
            and a.status = #{status}
        </if>
        order by a.id desc
    </select>


    <insert id="addTaskDefault" parameterType="java.util.List">
        INSERT INTO push_task_default
        (location,elevator,device_id,material,update_user,status,duration)
        <trim prefix="values" suffix="" suffixOverrides=",">
            <foreach collection="list" item="item" index="index" separator=",">
                (#{item.location},
                #{item.elevator},
                #{item.deviceId},
                #{item.material},
                #{item.updateUserName},
                #{item.status},
                #{item.duration}
                )
            </foreach>
        </trim>
    </insert>

    <update id="editTaskDefault" parameterType="com.soundai.elevator.cms.entity.PushDefaultTask">
        update  push_task_default set
        location =#{location},
        elevator =#{elevator},
        device_id =#{deviceId},
        material =#{material},
        status =#{status},
        update_user =#{updateUserName}
        where 1=1 AND id =#{id}
    </update>

    <select id="getIdsByTaskId" resultType="java.lang.Integer" parameterType="java.lang.Long">
        select id from  push_task
        where 1=1 AND
        task_id = #{taskId,jdbcType=INTEGER}
    </select>

    <delete id="delBatch">
        delete from push_task
        where task_id = #{taskId}
    </delete>

    <delete id="deletePushTask" parameterType="com.soundai.elevator.cms.vo.DeletePushTask">
       delete from push_task
        where task_id = #{taskId}
    </delete>

    <delete id="deletePushTaskByDeviceId" parameterType="java.lang.String">
       delete from push_task
        where device_id = #{deviceId}
    </delete>

    <delete id="deleteDefaultPushTaskByDeviceId" parameterType="java.lang.String">
       delete from push_task_default
        where device_id = #{deviceId}
    </delete>


    <select id="getDefaultTask" resultType="java.util.HashMap">
      SELECT * FROM push_task_default
    </select>

    <update id="changeStatus" parameterType="com.soundai.elevator.cms.vo.ChangeValueVo">
        update  push_task set status =#{item}
        where id =#{id}
    </update>

    <update id="changeDefaultStatus" parameterType="com.soundai.elevator.cms.entity.ChangeDefaultStatus">
        update  push_task_default set status =#{value}
        where device_id =#{deviceId}
    </update>
</mapper>